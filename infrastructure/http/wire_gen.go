// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package http

import (
	"github.com/google/wire"
	"github.com/riskykurniawan15/payrolls/config"
	attendance3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/attendance"
	health3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/health"
	overtime3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/overtime"
	payslip2 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/payslip"
	period3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/period"
	period_detail3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/period_detail"
	reimbursement3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/reimbursement"
	user3 "github.com/riskykurniawan15/payrolls/infrastructure/http/handler/user"
	"github.com/riskykurniawan15/payrolls/repositories/attendance"
	"github.com/riskykurniawan15/payrolls/repositories/health"
	"github.com/riskykurniawan15/payrolls/repositories/overtime"
	"github.com/riskykurniawan15/payrolls/repositories/period"
	"github.com/riskykurniawan15/payrolls/repositories/period_detail"
	"github.com/riskykurniawan15/payrolls/repositories/reimbursement"
	"github.com/riskykurniawan15/payrolls/repositories/user"
	attendance2 "github.com/riskykurniawan15/payrolls/services/attendance"
	health2 "github.com/riskykurniawan15/payrolls/services/health"
	overtime2 "github.com/riskykurniawan15/payrolls/services/overtime"
	"github.com/riskykurniawan15/payrolls/services/payslip"
	period2 "github.com/riskykurniawan15/payrolls/services/period"
	period_detail2 "github.com/riskykurniawan15/payrolls/services/period_detail"
	reimbursement2 "github.com/riskykurniawan15/payrolls/services/reimbursement"
	user2 "github.com/riskykurniawan15/payrolls/services/user"
	"github.com/riskykurniawan15/payrolls/utils/logger"
	"gorm.io/gorm"
)

// Injectors from dep_manager.go:

func InitializeHandler(db *gorm.DB, cfg config.Config, logger2 logger.Logger) *Dependencies {
	iHealthRepositories := health.NewHealthRepositories(db)
	iHealthServices := health2.NewHealthService(iHealthRepositories)
	iHealthHandler := health3.NewHealthHandlers(iHealthServices)
	iUserRepository := user.NewUserRepository(db)
	iUserService := user2.NewUserService(cfg, iUserRepository, logger2)
	iUserHandler := user3.NewUserHandlers(logger2, iUserService)
	iPeriodRepository := period.NewPeriodRepository(db)
	iPeriodService := period2.NewPeriodService(logger2, iPeriodRepository)
	iPeriodHandler := period3.NewPeriodHandlers(logger2, iPeriodService)
	iPeriodDetailRepository := period_detail.NewPeriodDetailRepository(db, iPeriodRepository, iUserRepository)
	iAttendanceRepository := attendance.NewAttendanceRepository(db)
	iOvertimeRepository := overtime.NewOvertimeRepository(db)
	iReimbursementRepository := reimbursement.NewReimbursementRepository(db)
	iPeriodDetailService := period_detail2.NewPeriodDetailService(logger2, iPeriodDetailRepository, iPeriodRepository, iUserRepository, iAttendanceRepository, iOvertimeRepository, iReimbursementRepository)
	iPeriodDetailHandler := period_detail3.NewPeriodDetailHandlers(iPeriodDetailService, logger2)
	iAttendanceService := attendance2.NewAttendanceService(logger2, iAttendanceRepository)
	iAttendanceHandler := attendance3.NewAttendanceHandlers(logger2, iAttendanceService)
	iOvertimeService := overtime2.NewOvertimeService(logger2, iOvertimeRepository, iAttendanceRepository)
	iOvertimeHandler := overtime3.NewOvertimeHandlers(logger2, iOvertimeService)
	iReimbursementService := reimbursement2.NewReimbursementService(logger2, iReimbursementRepository)
	iReimbursementHandler := reimbursement3.NewReimbursementHandlers(logger2, iReimbursementService)
	iPayslipService := payslip.NewPayslipService(logger2, iPeriodDetailRepository, cfg)
	iPayslipHandler := payslip2.NewPayslipHandlers(logger2, iPayslipService)
	dependencies := &Dependencies{
		HealthHandlers:        iHealthHandler,
		UserHandlers:          iUserHandler,
		PeriodHandlers:        iPeriodHandler,
		PeriodDetailHandlers:  iPeriodDetailHandler,
		AttendanceHandlers:    iAttendanceHandler,
		OvertimeHandlers:      iOvertimeHandler,
		ReimbursementHandlers: iReimbursementHandler,
		PayslipHandlers:       iPayslipHandler,
	}
	return dependencies
}

// dep_manager.go:

type Dependencies struct {
	HealthHandlers        health3.IHealthHandler
	UserHandlers          user3.IUserHandler
	PeriodHandlers        period3.IPeriodHandler
	PeriodDetailHandlers  period_detail3.IPeriodDetailHandler
	AttendanceHandlers    attendance3.IAttendanceHandler
	OvertimeHandlers      overtime3.IOvertimeHandler
	ReimbursementHandlers reimbursement3.IReimbursementHandler
	PayslipHandlers       payslip2.IPayslipHandler
}

var RepositorySet = wire.NewSet(health.NewHealthRepositories, user.NewUserRepository, period.NewPeriodRepository, period_detail.NewPeriodDetailRepository, attendance.NewAttendanceRepository, overtime.NewOvertimeRepository, reimbursement.NewReimbursementRepository)

var ServicesSet = wire.NewSet(health2.NewHealthService, user2.NewUserService, period2.NewPeriodService, period_detail2.NewPeriodDetailService, attendance2.NewAttendanceService, overtime2.NewOvertimeService, reimbursement2.NewReimbursementService, payslip.NewPayslipService)

var HandlerSet = wire.NewSet(health3.NewHealthHandlers, user3.NewUserHandlers, period3.NewPeriodHandlers, period_detail3.NewPeriodDetailHandlers, attendance3.NewAttendanceHandlers, overtime3.NewOvertimeHandlers, reimbursement3.NewReimbursementHandlers, payslip2.NewPayslipHandlers)
